policy_module(oasis, 1.100.1)

########################################
#
# Declarations
#

type oasis_t;
type oasis_exec_t;
init_daemon_domain(oasis_t, oasis_exec_t)

permissive oasis_t;

type oasis_initrc_exec_t;
init_script_file(oasis_initrc_exec_t)

type oasis_conf_t;
files_type(oasis_conf_t)

type oasis_var_lib_t;
files_type(oasis_var_lib_t)

type oasis_var_run_t;
files_type(oasis_var_run_t)

type oasis_port_t;
corenet_port(oasis_port_t)

########################################
#
# oasis local policy
#
allow oasis_t self:process { fork };

allow oasis_t self:fifo_file rw_fifo_file_perms;
allow oasis_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(oasis_t, oasis_conf_t, oasis_conf_t)
manage_files_pattern(oasis_t, oasis_conf_t, oasis_conf_t)

manage_dirs_pattern(oasis_t, oasis_var_lib_t, oasis_var_lib_t)
manage_files_pattern(oasis_t, oasis_var_lib_t, oasis_var_lib_t)
files_var_lib_filetrans(oasis_t, oasis_var_lib_t, { dir file })

manage_dirs_pattern(oasis_t, oasis_var_run_t, oasis_var_run_t)
manage_files_pattern(oasis_t, oasis_var_run_t, oasis_var_run_t)

sysnet_dns_name_resolve(oasis_t)
corenet_all_recvfrom_unlabeled(oasis_t)

allow oasis_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(oasis_t)
corenet_tcp_sendrecv_generic_node(oasis_t)
corenet_tcp_sendrecv_all_ports(oasis_t)
corenet_tcp_bind_generic_node(oasis_t)

gen_require(`
    type oasis_port_t;
')
allow oasis_t oasis_port_t:tcp_socket name_bind;

gen_require(`
    type oasis_port_t;
')
allow oasis_t oasis_port_t:tcp_socket name_connect;

domain_use_interactive_fds(oasis_t)

files_read_etc_files(oasis_t)

miscfiles_read_localization(oasis_t)

sysnet_dns_name_resolve(oasis_t)

allow oasis_t oasis_exec_t:file execute_no_trans;
allow oasis_t self:process setsched;
corecmd_exec_ls(oasis_t)
corenet_tcp_connect_http_port(oasis_t)
dev_read_urand(oasis_t)
fs_getattr_xattr_fs(oasis_t)
kernel_read_system_state(oasis_t)
